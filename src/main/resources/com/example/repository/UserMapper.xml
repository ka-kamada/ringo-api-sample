<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Mapperとxmlのマッピング -->
<mapper namespace="com.example.repository.UserMapper">

	<!-- ユーザー登録 -->
	<insert id="setUser">
		insert into user(
		id
		, name
		, birthdate
		, deleted
		, created_at
		, created_by
		, updated_at
		, updated_by
		, deleted_at
		, deleted_by
		)
		values (
		#{id}
		, #{name}
		, #{birthdate}
		, #{deleted}
		, #{createdAt}
		, #{createdBy}
		, #{updatedAt}
		, #{updatedBy}
		, #{deletedAt}
		, #{deletedBy}
		)
	</insert>

	<!-- ユーザー検索 -->
	<select id="getUser"
		resultType="com.example.bean.User">
		select * from user where
		<choose>
		<when test="name != null and birthdate == null">
		name like #{name} '%' and deleted = 0
		</when>
		<when test="name == null and birthdate != null">
		birthdate = #{birthdate} and deleted = 0 
		</when>
		<when test="name != null and birthdate != null">
		name like #{name} '%' and birthdate = #{birthdate} and deleted = 0
		</when>
		<when test="name == null and birthdate == null">
		deleted = 0
		</when>
		</choose> 
	</select>
	
	<select id="getUserId"
		resultType="com.example.bean.User">
		select * from user where id = #{id} and deleted = 0
	</select>
	
	<!-- ユーザー削除 -->
	<update id="deleteUser">
	    update user set 
	    deleted = '1' 
	    , deleted_at = #{deletedAt}
	    , deleted_by = #{deletedBy}
	    where id = #{id}
	</update>
	
	<!-- ユーザー更新 -->
	<update id="updateUser">
	    update user set 
	    name = #{name}
	    , birthdate = #{birthdate} 
	    , updated_at = #{updatedAt}
	    where id = #{id}
	</update>

</mapper>